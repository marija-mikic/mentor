name: Build and test
on: [push]
env:
  DATABASE_HOST: 127.0.0.1
jobs:
  run_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ["8.0", "8.1.0"]
        env: ["^6"]
    steps:
      - uses: actions/checkout@v2

      - name: actions-setup-mysql
        uses: shogo82148/actions-setup-mysql@v1.10.2
        with:
          user: symfony
          password: symfony

      - name: create db
        run: mysql -uroot -h127.0.0.1 -e 'CREATE DATABASE symfony_docker;'

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Require dependencies
        run: COMPOSER_MEMORY_LIMIT=-1 composer require symfony/console:${{matrix.env}} symfony/framework-bundle:${{matrix.env}} symfony/http-kernel:${{matrix.env}} --prefer-source

      - name: Install dependencies
        run: COMPOSER_MEMORY_LIMIT=-1 composer install --prefer-source

      - name: Run migrations
        run: php bin/console doctrine:migrations:migrate

  run_php_stan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ "8.0", "8.1.0" ]
    steps:
      - uses: actions/checkout@v2

      - name: actions-setup-mysql
        uses: shogo82148/actions-setup-mysql@v1.10.2
        with:
          user: symfony
          password: symfony

      - name: create db
        run: mysql -uroot -h127.0.0.1 -e 'CREATE DATABASE symfony_docker;'

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Require dependencies
        run: COMPOSER_MEMORY_LIMIT=-1 composer require symfony/console:${{matrix.env}} symfony/framework-bundle:${{matrix.env}} symfony/http-kernel:${{matrix.env}} --prefer-source

      - name: Install dependencies
        run: COMPOSER_MEMORY_LIMIT=-1 composer install --prefer-source
      - name: Run phpstan
        run:  vendor/bin/phpstan analyse